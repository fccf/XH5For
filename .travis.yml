language: python

python:
  - 2.7

sudo: false

cache:
  apt: true

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-6
      - gfortran-6
      - cmake
      - cmake-data

before_install:
  - pip install codecov
  - git submodule update --init --recursive
  - travis_retry wget --quiet https://support.hdfgroup.org/ftp/HDF5/current18/src/hdf5-1.8.18.tar;
  - travis_retry wget --no-check-certificate https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.2.tar.gz;

install:
  - export FC=gfortran-6
  - export CC=gcc-6
  - export GCOV=$(which gcov-6)
  - $FC --version
  - $GCOV --version
  ##################
  ## Install OMPI ##
  ##################
  - cd $TRAVIS_BUILD_DIR
  - tar zxf openmpi-1.10.2.tar.gz
  - cd openmpi-1.10.2
  - ./configure --prefix=$TRAVIS_BUILD_DIR/openmpi > /dev/null
  - travis_wait 20 make -j 8 --silent > /dev/null
  - make install > /dev/null 2>&1
  ##################
  ## Install HDF5 ##
  ##################
  - cd $TRAVIS_BUILD_DIR
  - tar xf hdf5-1.8.18.tar
  - cd hdf5-1.8.18
  - mkdir $TRAVIS_BUILD_DIR/hdf5
  - ./configure --prefix=$TRAVIS_BUILD_DIR/hdf5 -q --enable-parallel --enable-fortran --enable-fortran2003 --with-default-api-version=v18 --enable-silent-rules FC=$TRAVIS_BUILD_DIR/openmpi/bin/mpif90 CC=$TRAVIS_BUILD_DIR/openmpi/bin/mpicc > /dev/null
  - travis_wait 20 make -j 8 --silent > /dev/null
  - make install > /dev/null 2>&1
  ##################
  - export PATH=$TRAVIS_BUILD_DIR/hdf5:$TRAVIS_BUILD_DIR/openmpi/bin:$TRAVIS_BUILD_DIR/openmpi/lib:$TRAVIS_BUILD_DIR/openmpi/include:$TRAVIS_BUILD_DIR/hdf5:$TRAVIS_BUILD_DIR/hdf5/bin:$TRAVIS_BUILD_DIR/hdf5/lib:$TRAVIS_BUILD_DIR/hdf5/include:$PATH
  - echo $PATH
  - cmake --version

before_script:
  - cd $TRAVIS_BUILD_DIR;
  - mkdir build
  - cd build
  - cmake -DCMAKE_Fortran_COMPILER=$TRAVIS_BUILD_DIR/hdf5/bin/h5pfc -DXH5For_ENABLE_TESTS=ON -DXH5For_ENABLE_EXAMPLES=ON -DCOVERAGE_COMMAND=$GCOV -DXH5For_PRINT_IO_TIMES=ON -DXH5For_FORCE_FLUSH=ON -DMPIEXEC_PREFLAGS=--tag-output ..

script:
  - ctest -VV -T Start -T Build -T Test -T Coverage

after_success:
  - find . -name '*.gcno' -print
  - bash <(curl -s https://codecov.io/bash) -x $GCOV

after_script:
  - cd ..
  - rm -rf build

os:
  - linux
